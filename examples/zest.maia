
%skip: ' ' | '\n';

number: /int: ['0'-'9']+/ #value;

%start: number string;

t = (number[0].value, string[0].value);

q = (true, );

w = (3.14, );

s = t + (q + w);

fib = $int x -> int: x < 2 ? x : fib(x - 1) + fib(x - 2);

fib2 = $int x -> int: x < 2 ? k : fib2(x - 1) + fib2(x - 2);

k = 3;

bar = $int x, y, z -> int: ($int a -> int: ($int b -> int: ($int c -> int: a + b + c)(z))(y))(x);

iseven = $int x -> bool: x == 0 ? true  : isodd (x - 1);
isodd  = $int x -> bool: x == 0 ? false : iseven(x - 1);

%error: isodd(a + 1);
%error: iseven(a + 0);

a = 2;

boo1 = let! b = a + 2, c = b + 2: a + b + c;
boo2 = let! b = a + 2, c = b + 2: bar(a, b, c);

%error: boo1 > 1;
%error: boo2 > 1;

%error:
	factory = $int a, b -> $int -> int:
		let! basis = {0: a, 1: b},
			fib = $int x -> int: x < 2 ? basis[x] : fib(x - 1) + fib(x - 2):
			fib,
	fact1 = factory(t.0, t.0 + 1),
	fact2 = factory(t.0 + 2, t.0 + 3):
	fact1(5) > 5 && fact2(5) > 5;

%error: len!(s) == 4;

string: /['a'-'z', 'A'-'Z']+/ #value;

%error: float!(s.0) + s.3 > 10.0;




















