
[{
	"files": {
		"./guard": "bin/test-build/yes-verbose/no-dotout/guard",
		
		"./input.guard": [
			"%skip: ' ' | '\\n';",
			
			"integer: /int: ['0'-'9']+/ #value;",
			
			"%parse: argv as integer integer;",
			
			"i1 = integer[0].value;",
			"i2 = integer[1].value;",
			
			"i3 = 3;",
			
			"i4 = 0x12;",
			
			"i5 = +5;",
			"i6 = -5;",
			"i7 = ~5;",
			
			"i1;",
			
			"%error: 1 == (1);",
			"%error: 2 == (2);",
			"%error: 3 == (3);",
			
			"%error: +1 == (+1);",
			"%error: -2 == (-2);",
			"%error: -6 == (~5);",
			
			"test01 = (7 <<  2); %error: 28 == (7 <<  2);",
			"test02 = (7 << -2); %error:  1 == (7 << -2);",
			"test03 = (3 >>  2); %error:  0 == (3 >>  2);",
			"test04 = (3 >> -2); %error: 12 == (3 >> -2);",
			
			"%error: 28 == ($int x, y -> int: (x << y))(7,  2);",
			"%error:  1 == ($int x, y -> int: (x << y))(7, -2);",
			"%error:  0 == ($int x, y -> int: (x >> y))(3,  2);",
			"%error: 12 == ($int x, y -> int: (x >> y))(3, -2);",
			
			"%error: 2 == (3 & 2);",
			"%error: 3 == (3 | 2);",
			"%error: 1 == (3 ^ 2);",
			
			"%error: 2 == ($int x, y -> int: x & y)(3, 2);",
			"%error: 3 == ($int x, y -> int: x | y)(3, 2);",
			"%error: 1 == ($int x, y -> int: x ^ y)(3, 2);",
			
			"%error: 28 == (i1 <<  2);",
			"%error:  1 == (i1 << -2);",
			"%error:  1 == (i1 >>  2);",
			"%error: 28 == (i1 >> -2);",
			
			"test91 = (i1 & 2); %error: 2 == (i1 & 2);",
			"test92 = (i1 | 2); %error: 7 == (i1 | 2);",
			"test93 = (i1 ^ 2); %error: 5 == (i1 ^ 2);",
		],
		
		"./test.txt": [
			"7 12"
		]
	},
	"commands": [
		"./guard -i ./input.guard -o out.c",
		"gcc -Wall -Werror ./out.c -o ./out -lgmp",
		"./out ./test.txt"
	],
}]


















